name: Build & Release Electron App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4
      
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Python (prevent distutils issues)
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install setuptools (fix node-gyp distutils dependency)
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build React application
      run: npm run build
      
    - name: Build TypeScript main process
      run: npx tsc -p tsconfig.main.json
      
    - name: Rebuild native modules for Electron
      run: npm run rebuild
      
    - name: Build Electron application
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CSC_IDENTITY_AUTO_DISCOVERY: false
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          npm run dist:portable
        elif [ "$RUNNER_OS" == "macOS" ]; then
          npm run dist:mac
        else
          npx electron-builder --linux --publish never
        fi
      shell: bash
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-build-${{ matrix.os }}
        path: |
          dist-electron/*.exe
          dist-electron/*.dmg
          dist-electron/*.zip
          dist-electron/*.AppImage
          dist-electron/*.deb
          dist-electron/*.rpm
        retention-days: 30
        
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4
      
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/**/*.exe
          artifacts/**/*.dmg
          artifacts/**/*.zip
          artifacts/**/*.AppImage
          artifacts/**/*.deb
          artifacts/**/*.rpm
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}